[project]
name = "cli-panda"
version = "0.2.1"
description = "CLI Panda - AI-powered terminal ecosystem with RAG and distributed memory"
authors = [
    { name = "Maciej Gad", email = "maciej@libraxis.ai" },
    { name = "Klaudiusz AI", email = "klaudiusz@libraxis.ai" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: MacOS :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core dependencies only
    "aiohttp>=3.9.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
    "ruff>=0.12.1",
    "pytest>=8.4.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "ipython>=8.0.0",
]

[project.scripts]
cli-panda = "cli.cli_panda:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["cli", "lbrxchat", "PostDevAi"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "B905",  # `zip()` without an explicit `strict=` parameter
    "E722",  # do not use bare except
]

[tool.ruff.lint.isort]
known-third-party = ["mlx", "torch", "transformers", "langchain", "fastapi"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["lbrxchat", "PostDevAi"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[dependency-groups]
dev = [
    "pytest-asyncio>=1.0.0",
]
